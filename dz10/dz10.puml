@startuml

class Product {
  - id: int
  - name: String
  - price: float
  + Product(id: int, name: String, price: float)
}

class ProductDAO {
  - products: List<Product>
  + add_product(product: Product)
  + remove_product(product: Product)
  + get_all_products(): List<Product>
}

class ProductRepository {
  - dao: ProductDAO
  + add_product(product: Product)
  + remove_product(product: Product)
  + get_all_products(): List<Product>
}

class ProductService {
  - repository: ProductRepository
  + add_product(product: Product)
}

class UnitOfWork {
  - new_products: List<Product>
  - removed_products: List<Product>
  + register_new(product: Product)
  + register_removed(product: Product)
  + commit()
}

Product --> "*" ProductDAO
ProductRepository --> ProductDAO
ProductService --> ProductRepository
UnitOfWork --> "*" Product

ProductDAO --> "1" ProductRepository
ProductRepository --> "1" ProductService
ProductService --> "1" UnitOfWork

@enduml

'- Product: Класс, представляющий сущность "Продукт" с атрибутами id, name и price.'
'- ProductDAO: Класс, содержащий методы для добавления, удаления и получения продуктов из базы данных или списка.'
'- ProductRepository: Класс, служащий репозиторием для продуктов. Использует ProductDAO для доступа к данным.'
'- ProductService: Класс сервисного слоя, использующий ProductRepository для выполнения операций с продуктами.'
'- UnitOfWork: Класс, позволяющий группировать операции с продуктами в рамках транзакции.'